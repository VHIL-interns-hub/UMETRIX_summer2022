<templateSet group="UMETRIX">
  <template name="uem_show_hide_password" value="&lt;android.support.design.widget.TextInputLayout&#10;android:id=&quot;@+id/input_layout_password&quot;&#10;android:layout_width=&quot;wrap_content&quot;&#10;android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;&lt;EditText&#10;android:layout_width=&quot;wrap_content&quot;&#10;android:layout_height=&quot;wrap_content&quot;&#10;android:ems=&quot;20&quot;&#10;android:layout_marginTop=&quot;@dimen/fab_margin&quot;&#10;android:id=&quot;@+id/txtPassword&quot;&#10;android:inputType=&quot;textPassword&quot;&#10;android:hint=&quot;Password&quot;/&gt;&#10;        &#10;&lt;/android.support.design.widget.TextInputLayout&gt;" description="User can select to reveal or hide password as they type, during signup or sign-in" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="uem_guest_account" value="SharedPreferences sharedpreferences = getSharedPreferences(&quot;MyPrefrence&quot;, MODE_PRIVATE); //where MyPREFERENCES may be any name&#10;SharedPreferences.Editor editor = sharedpreferences.edit();&#10;editor.putString(&quot;&quot;, &quot;&quot;);  //here we can use many fields&#10;editor.commit();" description="If app requests sign-up, the user can choose to continue as a guest (the user is in control)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="uem_add_search_icon" value="&lt;item android:id=&quot;@+id/search&quot;&#10;        android:title=&quot;search_title&quot;&#10;        android:icon=&quot;@drawable/ic_menu_search&quot;&#10;        android:showAsAction=&quot;collapseActionView|ifRoom&quot;&#10;        android:actionViewClass=&quot;android.widget.SearchView&quot; /&gt;" description="If the search tool is inside the navigation menu, place it at the very top of that menu" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  
  
  
  <template name="add_show_password" value="&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot; &gt;&#10;&#10;    &lt;TextView&#10;&#10;        android:id=&quot;@+id/textView1&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_alignParentLeft=&quot;true&quot;&#10;        android:layout_alignParentTop=&quot;true&quot;&#10;        android:layout_marginLeft=&quot;23dp&quot;&#10;        android:layout_marginTop=&quot;86dp&quot;&#10;        android:text=&quot;@string/hello_world&quot;&#10;        tools:context=&quot;.MainActivity&quot; /&gt;&#10;&#10;    &lt;EditText&#10;&#10;        android:id=&quot;@+id/etPassword&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_alignLeft=&quot;@+id/textView1&quot;&#10;        android:layout_below=&quot;@+id/textView1&quot;&#10;        android:layout_marginLeft=&quot;21dp&quot;&#10;        android:layout_marginTop=&quot;14dp&quot;&#10;        android:ems=&quot;10&quot;&#10;        android:inputType=&quot;textPassword&quot; &gt;&#10;        &lt;requestFocus /&gt;&#10;    &lt;/EditText&gt;&#10;&#10;    &lt;CheckBox&#10;        android:id=&quot;@+id/cbShowPwd&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_alignLeft=&quot;@+id/etPassword&quot;&#10;        android:layout_below=&quot;@+id/etPassword&quot;&#10;        android:text=&quot;@string/show_pwd&quot; /&gt;&#10;&#10;&lt;/RelativeLayout&gt;" description=" User can select to reveal or hide password as they type, during signup or sign-in" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="add_show_password_func" value="        showPassword.setOnCheckedChangeListener(new OnCheckedChangeListener() {&#10;&#10;            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {&#10;&#10;                if (!isChecked) {&#10;                    // show password&#10;                    editPassword.setTransformationMethod(PasswordTransformationMethod.getInstance());&#10;                } else {&#10;                    // hide password&#10;                    editPassword.setTransformationMethod(HideReturnsTransformationMethod.getInstance());&#10;                }&#10;            }&#10;        });" description=" User can select to reveal or hide password as they type, during signup or sign-in" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_STRING" value="true" />
      <option name="COMPLETION" value="true" />
    </context>
  </template>
  <template name="login_multiple_signup" value="        b1 = (Button)findViewById(R.id.button);&#10;        ed1 = (EditText)findViewById(R.id.editText);&#10;        ed2 = (EditText)findViewById(R.id.editText2);&#10;&#10;        b2 = (Button)findViewById(R.id.button2);&#10;        tx1 = (TextView)findViewById(R.id.textView3);&#10;        tx1.setVisibility(View.GONE);&#10;&#10;        b1.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                if(ed1.getText().toString().equals(&quot;admin&quot;) &amp;&amp;&#10;                        ed2.getText().toString().equals(&quot;admin&quot;)) {&#10;                    Toast.makeText(getApplicationContext(),&#10;                            &quot;Redirecting...&quot;,Toast.LENGTH_SHORT).show();&#10;                }else{&#10;                    Toast.makeText(getApplicationContext(), &quot;Wrong Credentials&quot;,Toast.LENGTH_SHORT).show();&#10;&#10;                            tx1.setVisibility(View.VISIBLE);&#10;                    tx1.setBackgroundColor(Color.RED);&#10;                    counter--;&#10;                    tx1.setText(Integer.toString(counter));&#10;&#10;                    if (counter == 0) {&#10;                        b1.setEnabled(false);&#10;                    }&#10;                }&#10;            }&#10;        });&#10;        &#10;        // For Facebook Sign up &#10;        //https://developers.facebook.com/docs/facebook-login/android&#10;        &#10;        // For Google Signup&#10;        // https://developers.google.com/identity/sign-in/android/sign-in" description="First-time user has multiple sign-up options (e.g.,username / password and social sign-up facebook.com, google, twitter) " toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_STRING" value="true" />
      <option name="COMPLETION" value="true" />
    </context>
  </template>
  <template name="login_multiple_signup_xml" value="    &lt;TextView android:text = &quot;Login&quot; android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height = &quot;wrap_content&quot;&#10;        android:id = &quot;@+id/textview&quot;&#10;        android:textSize = &quot;35dp&quot;&#10;        android:layout_alignParentTop = &quot;true&quot;&#10;        android:layout_centerHorizontal = &quot;true&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width = &quot;wrap_content&quot;&#10;        android:layout_height = &quot;wrap_content&quot;&#10;        android:text = &quot;Tutorials point&quot;&#10;        android:id = &quot;@+id/textView&quot;&#10;        android:layout_below = &quot;@+id/textview&quot;&#10;        android:layout_centerHorizontal = &quot;true&quot;&#10;        android:textColor = &quot;#ff7aff24&quot;&#10;        android:textSize = &quot;35dp&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:layout_width = &quot;wrap_content&quot;&#10;        android:layout_height = &quot;wrap_content&quot;&#10;        android:id = &quot;@+id/editText&quot;&#10;        android:hint = &quot;Enter Name&quot;&#10;        android:focusable = &quot;true&quot;&#10;        android:textColorHighlight = &quot;#ff7eff15&quot;&#10;        android:textColorHint = &quot;#ffff25e6&quot;&#10;        android:layout_marginTop = &quot;46dp&quot;&#10;        android:layout_below = &quot;@+id/imageView&quot;&#10;        android:layout_alignParentLeft = &quot;true&quot;&#10;        android:layout_alignParentStart = &quot;true&quot;&#10;        android:layout_alignParentRight = &quot;true&quot;&#10;        android:layout_alignParentEnd = &quot;true&quot; /&gt;&#10;&#10;    &lt;ImageView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:id=&quot;@+id/imageView&quot;&#10;        android:layout_below=&quot;@+id/textView&quot;&#10;        android:layout_centerHorizontal=&quot;true&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:inputType=&quot;textPassword&quot;&#10;        android:ems=&quot;10&quot;&#10;        android:id=&quot;@+id/editText2&quot;&#10;        android:layout_below=&quot;@+id/editText&quot;&#10;        android:layout_alignParentLeft=&quot;true&quot;&#10;        android:layout_alignParentStart=&quot;true&quot;&#10;        android:layout_alignRight=&quot;@+id/editText&quot;&#10;        android:layout_alignEnd=&quot;@+id/editText&quot;&#10;        android:textColorHint=&quot;#ffff299f&quot;&#10;        android:hint=&quot;Password&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Attempts Left:&quot;&#10;        android:id=&quot;@+id/textView2&quot;&#10;        android:layout_below=&quot;@+id/editText2&quot;&#10;        android:layout_alignParentLeft=&quot;true&quot;&#10;        android:layout_alignParentStart=&quot;true&quot;&#10;        android:textSize=&quot;25dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;New Text&quot;&#10;        android:id=&quot;@+id/textView3&quot;&#10;        android:layout_alignTop=&quot;@+id/textView2&quot;&#10;        android:layout_alignParentRight=&quot;true&quot;&#10;        android:layout_alignParentEnd=&quot;true&quot;&#10;        android:layout_alignBottom=&quot;@+id/textView2&quot;&#10;        android:layout_toEndOf=&quot;@+id/textview&quot;&#10;        android:textSize=&quot;25dp&quot;&#10;        android:layout_toRightOf=&quot;@+id/textview&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;login&quot;&#10;        android:id=&quot;@+id/button&quot;&#10;        android:layout_alignParentBottom=&quot;true&quot;&#10;        android:layout_toLeftOf=&quot;@+id/textview&quot;&#10;        android:layout_toStartOf=&quot;@+id/textview&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Cancel&quot;&#10;        android:id=&quot;@+id/button2&quot;&#10;        android:layout_alignParentBottom=&quot;true&quot;&#10;        android:layout_toRightOf=&quot;@+id/textview&quot;&#10;        android:layout_toEndOf=&quot;@+id/textview&quot; /&gt;" description="Add mutiple sign up options in login screen" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="add_form_label" value=" &lt;android.support.design.widget.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edFirstName&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:ems=&quot;10&quot;&#10;            android:hint=&quot;First Name&quot;&#10;            android:inputType=&quot;textCapWords&quot;/&gt;&#10;    &lt;/android.support.design.widget.TextInputLayout&gt;&#10;&#10;    &lt;android.support.design.widget.TextInputLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/edLastName&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:ems=&quot;10&quot;&#10;            android:hint=&quot;Last Name&quot;&#10;            android:inputType=&quot;textCapWords&quot;/&gt;&#10;    &lt;/android.support.design.widget.TextInputLayout&gt;" description="Form labels are either above form fields or are floating labels (in Android)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="restart_last_used_screen" value="&lt;activity&#10;    android:name=&quot;.LoginActivity&quot;&#10;    android:alwaysRetainTaskState=&quot;true&quot;&gt;&#10;    &lt;intent-filter&gt;&#10;        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;    &lt;/intent-filter&gt;&#10;&lt;/activity&gt;" description="When app crashes it re-starts and returns the user to the last screen used(to continue where they left off)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="drop_down_box_whole_screen" value="    &lt;Spinner&#10;        android:id=&quot;@+id/spinner1&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:entries=&quot;@array/country_arrays&quot;&#10;        android:prompt=&quot;@string/country_prompt&quot;&#10;        android:spinnerMode=&quot;dialog&quot;/&gt;" description="Minimize scrolling in a drop-down box by using the whole screen to display long lists of options" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="XSL_TEXT" value="true" />
      <option name="XML" value="true" />
      <option name="XML_TEXT" value="true" />
    </context>
  </template>
  <template name="left_navigation" value="public class MainActivity extends AppCompatActivity&#10;        implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main);&#10;        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);&#10;        setSupportActionBar(toolbar);&#10;&#10;        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);&#10;        fab.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View view) {&#10;                Snackbar.make(view, &quot;Replace with your own action&quot;, Snackbar.LENGTH_LONG)&#10;                        .setAction(&quot;Action&quot;, null).show();&#10;            }&#10;        });&#10;&#10;        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);&#10;        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(&#10;                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);&#10;        drawer.setDrawerListener(toggle);&#10;        toggle.syncState();&#10;&#10;        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);&#10;        navigationView.setNavigationItemSelectedListener(this);&#10;    }&#10;&#10;    @Override&#10;    public void onBackPressed() {&#10;        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);&#10;        if (drawer.isDrawerOpen(GravityCompat.START)) {&#10;            drawer.closeDrawer(GravityCompat.START);&#10;        } else {&#10;            super.onBackPressed();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        // Inflate the menu; this adds items to the action bar if it is present.&#10;        getMenuInflater().inflate(R.menu.main, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(MenuItem item) {&#10;        // Handle action bar item clicks here. The action bar will&#10;        // automatically handle clicks on the Home/Up button, so long&#10;        // as you specify a parent activity in AndroidManifest.xml.&#10;        int id = item.getItemId();&#10;&#10;        //noinspection SimplifiableIfStatement&#10;        if (id == R.id.action_settings) {&#10;            return true;&#10;        }&#10;&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    @SuppressWarnings(&quot;StatementWithEmptyBody&quot;)&#10;    @Override&#10;    public boolean onNavigationItemSelected(MenuItem item) {&#10;        // Handle navigation view item clicks here.&#10;        int id = item.getItemId();&#10;&#10;        if (id == R.id.nav_camera) {&#10;            // Handle the camera action&#10;        } else if (id == R.id.nav_gallery) {&#10;&#10;        } else if (id == R.id.nav_slideshow) {&#10;&#10;        } else if (id == R.id.nav_manage) {&#10;&#10;        } else if (id == R.id.nav_share) {&#10;&#10;        } else if (id == R.id.nav_send) {&#10;&#10;        }&#10;&#10;        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);&#10;        drawer.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;}&#10;" description="left navigation for moving between menu options" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_STRING" value="true" />
      <option name="COMPLETION" value="true" />
    </context>
  </template>
  <template name="breadcrums_main_activity" value="public class SamplePageAdapter extends FragmentStatePagerAdapter {&#10;&#10;    private List&lt;Fragment&gt; registeredFragments = new ArrayList&lt;&gt;();&#10;    private List&lt;String&gt; registeredTitles = new ArrayList&lt;&gt;();&#10;&#10;    public SamplePageAdapter(FragmentManager fragmentManager) {&#10;        super(fragmentManager);&#10;    }&#10;&#10;    @Override&#10;    public Fragment getItem(int position) {&#10;        return registeredFragments.get(position);&#10;    }&#10;&#10;&#10;    @Override&#10;    public int getItemPosition(Object object) {&#10;        int index = registeredFragments.indexOf (object);&#10;        if (index == -1)&#10;            return POSITION_NONE;&#10;        else&#10;            return index;&#10;    }&#10;&#10;&#10;    @Override&#10;    public int getCount() {&#10;        return registeredFragments.size();&#10;    }&#10;&#10;    @Override&#10;    public CharSequence getPageTitle(int position) {&#10;        return registeredTitles.get(position);&#10;    }&#10;&#10;    @Override&#10;    public float getPageWidth (int position) {&#10;        return 0.93f;&#10;    }&#10;&#10;    public void addItem(String title, Fragment fragment) {&#10;        registeredFragments.add(fragment);&#10;        registeredTitles.add(title);&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    public View getTabView(Context context, int position, int selectedPosition) {&#10;        int drawable;&#10;        if (position == selectedPosition) {&#10;            drawable = R.drawable.tab_selecionada;&#10;        } else if (position == selectedPosition-1) {&#10;            drawable = R.drawable.tab_nao_selecionada_prev;&#10;        } else {&#10;            drawable = R.drawable.tab_nao_selecionada;&#10;        }&#10;&#10;        View view = View.inflate(context, R.layout.tab_layout, null);&#10;        TextView title = (TextView) view.findViewById(R.id.title);&#10;        ImageView icon = (ImageView) view.findViewById(R.id.btnClose);&#10;        icon.setTag(position);&#10;        icon.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                int pageIndex = Integer.parseInt(v.getTag().toString());&#10;&#10;                if (pageIndex &gt;= 0) {&#10;                    registeredFragments.remove(pageIndex);&#10;                    registeredTitles.remove(pageIndex);&#10;                    notifyDataSetChanged();&#10;                }&#10;            }&#10;        });&#10;        ViewGroup layout = (ViewGroup) view.findViewById(R.id.root);&#10;&#10;        layout.setBackgroundResource(drawable);&#10;        title.setText(this.getPageTitle(position));&#10;&#10;        return view;&#10;    }&#10;}" description="Breadcrumbs to keep users informed on the navigation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_STRING" value="true" />
      <option name="COMPLETION" value="true" />
    </context>
  </template>
  <template name="breadcrums_sample_page_adapter" value="public class SamplePageAdapter extends FragmentStatePagerAdapter {&#10;&#10;    private List&lt;Fragment&gt; registeredFragments = new ArrayList&lt;&gt;();&#10;    private List&lt;String&gt; registeredTitles = new ArrayList&lt;&gt;();&#10;&#10;    public SamplePageAdapter(FragmentManager fragmentManager) {&#10;        super(fragmentManager);&#10;    }&#10;&#10;    @Override&#10;    public Fragment getItem(int position) {&#10;        return registeredFragments.get(position);&#10;    }&#10;&#10;&#10;    @Override&#10;    public int getItemPosition(Object object) {&#10;        int index = registeredFragments.indexOf (object);&#10;        if (index == -1)&#10;            return POSITION_NONE;&#10;        else&#10;            return index;&#10;    }&#10;&#10;&#10;    @Override&#10;    public int getCount() {&#10;        return registeredFragments.size();&#10;    }&#10;&#10;    @Override&#10;    public CharSequence getPageTitle(int position) {&#10;        return registeredTitles.get(position);&#10;    }&#10;&#10;    @Override&#10;    public float getPageWidth (int position) {&#10;        return 0.93f;&#10;    }&#10;&#10;    public void addItem(String title, Fragment fragment) {&#10;        registeredFragments.add(fragment);&#10;        registeredTitles.add(title);&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    public View getTabView(Context context, int position, int selectedPosition) {&#10;        int drawable;&#10;        if (position == selectedPosition) {&#10;            drawable = R.drawable.tab_selecionada;&#10;        } else if (position == selectedPosition-1) {&#10;            drawable = R.drawable.tab_nao_selecionada_prev;&#10;        } else {&#10;            drawable = R.drawable.tab_nao_selecionada;&#10;        }&#10;&#10;        View view = View.inflate(context, R.layout.tab_layout, null);&#10;        TextView title = (TextView) view.findViewById(R.id.title);&#10;        ImageView icon = (ImageView) view.findViewById(R.id.btnClose);&#10;        icon.setTag(position);&#10;        icon.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                int pageIndex = Integer.parseInt(v.getTag().toString());&#10;&#10;                if (pageIndex &gt;= 0) {&#10;                    registeredFragments.remove(pageIndex);&#10;                    registeredTitles.remove(pageIndex);&#10;                    notifyDataSetChanged();&#10;                }&#10;            }&#10;        });&#10;        ViewGroup layout = (ViewGroup) view.findViewById(R.id.root);&#10;&#10;        layout.setBackgroundResource(drawable);&#10;        title.setText(this.getPageTitle(position));&#10;&#10;        return view;&#10;    }&#10;}" description="Breadcrums to keep users informed on the navigation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_STRING" value="true" />
      <option name="COMPLETION" value="true" />
    </context>
  </template>
  <template name="breadcrums_blank_fragment" value="public class BlankFragment extends Fragment {&#10;&#10;    public BlankFragment() {&#10;        // Required empty public constructor&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;    }&#10;&#10;    @Override&#10;    public View onCreateView(LayoutInflater inflater, ViewGroup container,&#10;                             Bundle savedInstanceState) {&#10;&#10;        View view = inflater.inflate(R.layout.fragment_blank, container, false);&#10;&#10;        Random rnd = new Random();&#10;        int color = Color.argb(255, rnd.nextInt(256), rnd.nextInt(256), rnd.nextInt(256));&#10;        view.setBackgroundColor(color);&#10;&#10;        return view;&#10;    }&#10;&#10;}" description="Breadcrums to keep users informed on the navigation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_STRING" value="true" />
      <option name="COMPLETION" value="true" />
    </context>
</template>
  
</templateSet>